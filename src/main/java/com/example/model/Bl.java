package com.example.model;
// Generated 11-05-2018 17:31:26 by Hibernate Tools 5.2.10.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import com.example.config.Entidades;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;



/**
 * Bl generated by hbm2java
 */
@Entity
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property  = "id", scope = Bl.class)
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Table(name = "bl", schema = "dbo")
public class Bl implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4761983617955997057L;
	private Integer id;
	private String nroBl;
	private String nroBlOriginal;
	private Manifiesto manifiesto;
	private char tipoAccion;
	private Character tipoBl;
	private Date fechaRecepcion;
	private String servicio;
	private String tipoServicio;
	private String condTransporte;
	private int totalBultos;
	private BigDecimal totalPeso;
	private String unidadPeso;
	private BigDecimal totalVolumen;
	private String unidadVolumen;
	private int totalItem;
	private String usuarioCr;
	private String motivoAnulacion;
	private String estado;
	private Date fechaCr;
	private String usuarioUp;
	private Date fechaUp;
	private Character blAforo;
	private Character blSag;
	private String aforo;
	private Set<BlReferencia> blReferencias = new HashSet<BlReferencia>(0);
	private Set<BlAuditoria> blAuditorias = new HashSet<BlAuditoria>(0);
	private Set<BlFecha> blFechas = new HashSet<BlFecha>(0);
	private Set<BlParticipante> blParticipantes = new HashSet<BlParticipante>(0);
	private Set<BlTransbordo> blTransbordos = new HashSet<BlTransbordo>(0);
	private Set<BlObservacion> blObservacions = new HashSet<BlObservacion>(0);
	private Set<BlLocacion> blLocacions = new HashSet<BlLocacion>(0);
	private Set<BlFlete> blFletes = new HashSet<BlFlete>(0);
	private Set<BlItem> blItems = new HashSet<BlItem>(0);
	private Set<BlTransporte> blTransportes = new HashSet<BlTransporte>(0);
	private Set<BlVersion> versiones = new HashSet<BlVersion>(0);

	
	
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequence_bl")
	@SequenceGenerator(name = "sequence_bl", sequenceName = "seq_bl", allocationSize = 1, schema = "dbo", catalog = Entidades.CATALOGO_DB)
	@Column(name = "id", unique = true, nullable = false, length = 35)
	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "nro_bl", nullable = false)
	public String getNroBl() {
		return this.nroBl;
	}

	public void setNroBl(String nroBl) {
		this.nroBl = nroBl;
	}

	@ManyToOne(cascade = CascadeType.MERGE)
	@JoinColumn(name = "manifiesto_nro_mfto_interno", nullable = false)
	public Manifiesto getManifiesto() {
		return this.manifiesto;
	}

	public void setManifiesto(Manifiesto manifiesto) {
		this.manifiesto = manifiesto;
	}

	@Column(name = "tipo_accion", nullable = false, length = 1)
	public char getTipoAccion() {
		return this.tipoAccion;
	}

	public void setTipoAccion(char tipoAccion) {
		this.tipoAccion = tipoAccion;
	}

	@Column(name = "tipo_bl", length = 1)
	public Character getTipoBl() {
		return this.tipoBl;
	}

	public void setTipoBl(Character tipoBl) {
		this.tipoBl = tipoBl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	
	@Column(name = "fecha_recepcion", length = 23)
	public Date getFechaRecepcion() {
		return this.fechaRecepcion;
	}

	public void setFechaRecepcion(Date fechaRecepcion) {
		this.fechaRecepcion = fechaRecepcion;
	}

	@Column(name = "servicio", length = 5)
	public String getServicio() {
		return this.servicio;
	}

	public void setServicio(String servicio) {
		this.servicio = servicio;
	}

	@Column(name = "tipo_servicio", nullable = false, length = 10)
	public String getTipoServicio() {
		return this.tipoServicio;
	}

	public void setTipoServicio(String tipoServicio) {
		this.tipoServicio = tipoServicio;
	}

	@Column(name = "cond_transporte", length = 2)
	public String getCondTransporte() {
		return this.condTransporte;
	}

	public void setCondTransporte(String condTransporte) {
		this.condTransporte = condTransporte;
	}

	@Column(name = "total_bultos", nullable = false)
	public int getTotalBultos() {
		return this.totalBultos;
	}

	public void setTotalBultos(int totalBultos) {
		this.totalBultos = totalBultos;
	}

	@Column(name = "total_peso", nullable = false, precision = 16, scale = 3)
	public BigDecimal getTotalPeso() {
		return this.totalPeso;
	}

	public void setTotalPeso(BigDecimal totalPeso) {
		this.totalPeso = totalPeso;
	}

	@Column(name = "unidad_peso", nullable = false, length = 10)
	public String getUnidadPeso() {
		return this.unidadPeso;
	}

	public void setUnidadPeso(String unidadPeso) {
		this.unidadPeso = unidadPeso;
	}

	@Column(name = "total_volumen", precision = 15)
	public BigDecimal getTotalVolumen() {
		return this.totalVolumen;
	}

	public void setTotalVolumen(BigDecimal totalVolumen) {
		this.totalVolumen = totalVolumen;
	}

	@Column(name = "unidad_volumen", length = 10)
	public String getUnidadVolumen() {
		return this.unidadVolumen;
	}

	public void setUnidadVolumen(String unidadVolumen) {
		this.unidadVolumen = unidadVolumen;
	}

	@Column(name = "total_item", nullable = false)
	public int getTotalItem() {
		return this.totalItem;
	}

	public void setTotalItem(int totalItem) {
		this.totalItem = totalItem;
	}

	@Column(name = "usuario_cr", length = 50)
	public String getUsuarioCr() {
		return this.usuarioCr;
	}

	public void setUsuarioCr(String usuarioCr) {
		this.usuarioCr = usuarioCr;
	}

	@CreationTimestamp
	
	@Column(name = "fecha_cr", length = 23)
	public Date getFechaCr() {
		return this.fechaCr;
	}

	public void setFechaCr(Date fechaCr) {
		this.fechaCr = fechaCr;
	}

	@Column(name = "usuario_up", length = 50)
	public String getUsuarioUp() {
		return this.usuarioUp;
	}

	public void setUsuarioUp(String usuarioUp) {
		this.usuarioUp = usuarioUp;
	}

	@UpdateTimestamp
	@Column(name = "fecha_up", length = 23)
	public Date getFechaUp() {
		return this.fechaUp;
	}

	public void setFechaUp(Date fechaUp) {
		this.fechaUp = fechaUp;
	}

	@Column(name = "bl_aforo", length = 1)
	public Character getBlAforo() {
		return blAforo;
	}

	public void setBlAforo(Character blAforo) {
		this.blAforo = blAforo;
	}

	@Column(name = "bl_sag", length = 1)
	public Character getBlSag() {
		return blSag;
	}

	public void setBlSag(Character blSag) {
		this.blSag = blSag;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlReferencia> getBlReferencias() {
		return this.blReferencias;
	}

	public void setBlReferencias(Set<BlReferencia> blReferencias) {
		this.blReferencias = blReferencias;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlAuditoria> getBlAuditorias() {
		return this.blAuditorias;
	}

	public void setBlAuditorias(Set<BlAuditoria> blAuditorias) {
		this.blAuditorias = blAuditorias;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlFecha> getBlFechas() {
		return this.blFechas;
	}

	public void setBlFechas(Set<BlFecha> blFechas) {
		this.blFechas = blFechas;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlParticipante> getBlParticipantes() {
		return this.blParticipantes;
	}

	public void setBlParticipantes(Set<BlParticipante> blParticipantes) {
		this.blParticipantes = blParticipantes;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlTransbordo> getBlTransbordos() {
		return this.blTransbordos;
	}

	public void setBlTransbordos(Set<BlTransbordo> blTransbordos) {
		this.blTransbordos = blTransbordos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlObservacion> getBlObservacions() {
		return this.blObservacions;
	}

	public void setBlObservacions(Set<BlObservacion> blObservacions) {
		this.blObservacions = blObservacions;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlLocacion> getBlLocacions() {
		return this.blLocacions;
	}

	public void setBlLocacions(Set<BlLocacion> blLocacions) {
		this.blLocacions = blLocacions;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlFlete> getBlFletes() {
		return this.blFletes;
	}

	public void setBlFletes(Set<BlFlete> blFletes) {
		this.blFletes = blFletes;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlItem> getBlItems() {
		return this.blItems;
	}

	public void setBlItems(Set<BlItem> blItems) {
		this.blItems = blItems;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlTransporte> getBlTransportes() {
		return this.blTransportes;
	}

	public void setBlTransportes(Set<BlTransporte> blTransportes) {
		this.blTransportes = blTransportes;
	}

	@Column(name = "nro_bl_original")
	public String getNroBlOriginal() {
		return nroBlOriginal;
	}

	public void setNroBlOriginal(String nroBlOriginal) {
		this.nroBlOriginal = nroBlOriginal;
	}

	@Column(name = "motivo_anulacion", length = 200)
	public String getMotivoAnulacion() {
		return motivoAnulacion;
	}

	public void setMotivoAnulacion(String motivoAnulacion) {
		this.motivoAnulacion = motivoAnulacion;
	}

	@Column(name = "estado", length = 50)
	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}
	@Column(name = "aforo", length = 50)
	public String getAforo() {
		return aforo;
	}

	public void setAforo(String aforo) {
		this.aforo = aforo;
	}
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "bl", cascade = CascadeType.ALL)
	public Set<BlVersion> getVersiones() {
		return versiones;
	}

	public void setVersiones(Set<BlVersion> versiones) {
		this.versiones = versiones;
	}
	

}
