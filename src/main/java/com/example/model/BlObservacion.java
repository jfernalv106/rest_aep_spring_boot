package com.example.model;

import com.example.config.Entidades;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;

// Generated 11-05-2018 17:31:26 by Hibernate Tools 5.2.10.Final



/**
 * BlObservacion generated by hbm2java
 */
@Entity
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property  = "id", scope = BlObservacion.class)
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Table(name = "bl_observacion", schema = "dbo")
public class BlObservacion implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1834351180580424082L;
	private Integer id;
	private Bl bl;
	private String nombre;
	private String contenido;

	

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequence_bl_observacion")
	@SequenceGenerator(name = "sequence_bl_observacion", sequenceName = "seq_bl_observacion", allocationSize = 1, schema = "dbo", catalog = Entidades.CATALOGO_DB)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(cascade=CascadeType.MERGE)
	@JoinColumn(name = "bl_nro_bl", nullable = false)
	public Bl getBl() {
		return this.bl;
	}

	public void setBl(Bl bl) {
		this.bl = bl;
	}

	@Column(name = "nombre", nullable = false, length = 10)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "contenido", nullable = false)
	public String getContenido() {
		return this.contenido;
	}

	public void setContenido(String contenido) {
		if(contenido!=null) {
			this.contenido = contenido.toUpperCase();
		}else {
			this.contenido = contenido;
		}
		
	}

}
