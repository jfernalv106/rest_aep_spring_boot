package com.example.model;
// Generated 11-05-2018 17:31:26 by Hibernate Tools 5.2.10.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import com.example.config.Entidades;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;



/**
 * BlItem generated by hbm2java
 */
@Entity
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property  = "id", scope = BlItem.class)
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Table(name = "bl_item", schema = "dbo")
public class BlItem implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4586629635833342855L;
	private Integer id;
	private Bl bl = new Bl();
	private Integer nroItem;
	private String marcas;
	private Character cargaPeligrosa;
	private BlItemTipoBulto tipoBulto;
	private String descripcion;
	private Integer cantidad;
	private BigDecimal pesoBruto;
	private String unidadPeso;
	private BigDecimal volumen;
	private String unidadVolumen;
	private String observaciones;
	private Character cargaCnt;
	private Set<BlItemEquipo> blItemEquipos =new HashSet<BlItemEquipo>(0);
	private Set<BlItemVehiculo> blItemVehiculos = new HashSet<BlItemVehiculo>(0);
	private Set<BlItemImo> blItemImos = new HashSet<BlItemImo>(0);
	private Set<BlItemContenedor> blItemContenedors = new HashSet<BlItemContenedor>(0);

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequence_item")
	@SequenceGenerator(name = "sequence_item", sequenceName = "seq_item", allocationSize = 1, schema = "dbo", catalog = Entidades.CATALOGO_DB)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(cascade = CascadeType.MERGE)
	@JoinColumn(name = "bl_nro_bl", nullable = false)
	public Bl getBl() {
		return this.bl;
	}

	public void setBl(Bl bl) {
		this.bl = bl;
	}

	@Column(name = "nro_item")
	public Integer getNroItem() {
		return this.nroItem;
	}

	public void setNroItem(Integer nroItem) {
		this.nroItem = nroItem;
	}

	@Column(name = "marcas", nullable = false, length = 2048)
	public String getMarcas() {
		return this.marcas;
	}

	public void setMarcas(String marcas) {
		if (marcas != null) {
			this.marcas = marcas.toUpperCase();
		} else {
			this.marcas = marcas;
		}

	}

	@Column(name = "carga_peligrosa", nullable = false, length = 1)
	public Character getCargaPeligrosa() {
		return this.cargaPeligrosa;
	}

	public void setCargaPeligrosa(Character cargaPeligrosa) {
		this.cargaPeligrosa = cargaPeligrosa;
	}

	@ManyToOne(cascade = CascadeType.MERGE)
	@JoinColumn(name = "tipo_bulto", nullable = false)
	public BlItemTipoBulto getTipoBulto() {
		return tipoBulto;
	}

	public void setTipoBulto(BlItemTipoBulto tipoBulto) {
		this.tipoBulto = tipoBulto;
	}

	@Column(name = "descripcion", nullable = false, length = 2048)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		if (descripcion != null) {
			this.descripcion = descripcion.toUpperCase();
		} else {
			this.descripcion = descripcion;
		}

	}

	@Column(name = "cantidad", nullable = false)
	public Integer getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(Integer cantidad) {
		this.cantidad = cantidad;
	}

	@Column(name = "peso_bruto", nullable = false, precision = 16, scale = 3)
	public BigDecimal getPesoBruto() {
		return this.pesoBruto;
	}

	public void setPesoBruto(BigDecimal pesoBruto) {
		this.pesoBruto = pesoBruto;
	}

	@Column(name = "unidad_peso", nullable = false, length = 10)
	public String getUnidadPeso() {
		return this.unidadPeso;
	}

	public void setUnidadPeso(String unidadPeso) {
		this.unidadPeso = unidadPeso;
	}

	@Column(name = "volumen", precision = 15)
	public BigDecimal getVolumen() {
		return this.volumen;
	}

	public void setVolumen(BigDecimal volumen) {
		this.volumen = volumen;
	}

	@Column(name = "unidad_volumen", length = 10)
	public String getUnidadVolumen() {
		return this.unidadVolumen;
	}

	public void setUnidadVolumen(String unidadVolumen) {
		this.unidadVolumen = unidadVolumen;
	}

	@Column(name = "observaciones")
	public String getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(String observaciones) {
		if (observaciones != null) {
			this.observaciones = observaciones.toUpperCase();
		} else {
			this.observaciones = observaciones;
		}

	}

	@Column(name = "carga_cnt", length = 1)
	public Character getCargaCnt() {
		return this.cargaCnt;
	}

	public void setCargaCnt(Character cargaCnt) {
		this.cargaCnt = cargaCnt;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "blItem",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlItemEquipo> getBlItemEquipos() {
		return this.blItemEquipos;
	}

	public void setBlItemEquipos(Set<BlItemEquipo> blItemEquipos) {
		this.blItemEquipos = blItemEquipos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "blItem",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlItemVehiculo> getBlItemVehiculos() {
		return this.blItemVehiculos;
	}

	public void setBlItemVehiculos(Set<BlItemVehiculo> blItemVehiculos) {
		this.blItemVehiculos = blItemVehiculos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "blItem",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlItemImo> getBlItemImos() {
		return this.blItemImos;
	}

	public void setBlItemImos(Set<BlItemImo> blItemImos) {
		this.blItemImos = blItemImos;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "blItem",orphanRemoval = true, cascade = CascadeType.ALL)
	public Set<BlItemContenedor> getBlItemContenedors() {
		return this.blItemContenedors;
	}

	public void setBlItemContenedors(Set<BlItemContenedor> blItemContenedors) {
		this.blItemContenedors = blItemContenedors;
	}

}
