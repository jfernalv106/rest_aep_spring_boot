package com.example.model;
// Generated 11-05-2018 17:31:26 by Hibernate Tools 5.2.10.Final


import java.util.Date;

import org.hibernate.annotations.Formula;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Transient;



/**
 * Manifiesto generated by hbm2java
 */
@Entity
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property  = "nroMftoInterno", scope = Manifiesto.class)
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
@Table(name = "manifiesto", schema = "dbo")
public class Manifiesto implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8221577838117182373L;
	private String nroMftoInterno;
	private String nroMftoInternoEmpresa;
	private Integer version;
	private Integer nroMfto;
	private String nave;
	private String viaje;
	private String servicio;
	private String agencia;
	private Date fechaMfto;
	private String estado;
	private Date inscripcionDesde;
	private Date inscripcionHasta;
	private Date trasladoPuerto;
	private Character tipoMfto;
	private Character tipoAccion;
	private Character condCarga;
	private String sitioAtraque;
	private String almacen;
	private String usuarioCr;
	private Date fechaCr;
	private String usuarioUp;
	private Date fechaUp;
	private Date fechaUltLec;
	private String tipoCarga;
	private String motivoAnulacion;
	private Date fechaTraspaso;
	private Date zarpe;
	private Date arriboEfectivo;

	private boolean faltas;
	private boolean faltaSin;



	@PrePersist
	public void prePersist() {
		if (estado != null) {
			estado = "ACTIVO";
		}
		if (nave != null) {
			nave = nave.replaceAll("	", "");
		}
		if (viaje != null) {
			viaje = viaje.replaceAll("	", "");
		}

	}

	@Id
	@Column(name = "nro_mfto_interno", unique = true, nullable = false, length = 10)
	public String getNroMftoInterno() {
		return this.nroMftoInterno;
	}

	public void setNroMftoInterno(String nroMftoInterno) {
		this.nroMftoInterno = nroMftoInterno;
	}

	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@Column(name = "nro_mfto", nullable = false)
	public Integer getNroMfto() {
		return nroMfto;
	}

	public void setNroMfto(Integer nroMfto) {
		this.nroMfto = nroMfto;
	}

	@Column(name = "nave", nullable = false, length = 50)
	public String getNave() {
		return this.nave;
	}

	public void setNave(String nave) {
		this.nave = nave;
	}

	@Column(name = "viaje", nullable = false, length = 30)
	public String getViaje() {
		return this.viaje;
	}

	public void setViaje(String viaje) {
		this.viaje = viaje;
	}

	@Column(name = "servicio", nullable = false, length = 30)
	public String getServicio() {
		return this.servicio;
	}

	public void setServicio(String servicio) {
		this.servicio = servicio;
	}

	@Column(name = "agencia", nullable = false, length = 50)
	public String getAgencia() {
		return this.agencia;
	}

	public void setAgencia(String agencia) {
		this.agencia = agencia;
	}


	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_mfto", nullable = false, length = 23)
	public Date getFechaMfto() {
		return this.fechaMfto;
	}

	public void setFechaMfto(Date fechaMfto) {
		this.fechaMfto = fechaMfto;
	}

	@Column(name = "estado", nullable = false, length = 10)
	public String getEstado() {
		return this.estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "inscripcion_desde", length = 23)
	public Date getInscripcionDesde() {
		return this.inscripcionDesde;
	}

	public void setInscripcionDesde(Date inscripcionDesde) {
		this.inscripcionDesde = inscripcionDesde;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "inscripcion_hasta", length = 23)
	public Date getInscripcionHasta() {
		return this.inscripcionHasta;
	}

	public void setInscripcionHasta(Date inscripcionHasta) {
		this.inscripcionHasta = inscripcionHasta;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "traslado_puerto", length = 23)
	public Date getTrasladoPuerto() {
		return this.trasladoPuerto;
	}

	public void setTrasladoPuerto(Date trasladoPuerto) {
		this.trasladoPuerto = trasladoPuerto;
	}

	@Column(name = "tipo_mfto", length = 1)
	public Character getTipoMfto() {
		return this.tipoMfto;
	}

	public void setTipoMfto(Character tipoMfto) {
		this.tipoMfto = tipoMfto;
	}

	@Column(name = "tipo_accion", length = 1)
	public Character getTipoAccion() {
		return this.tipoAccion;
	}

	public void setTipoAccion(Character tipoAccion) {
		this.tipoAccion = tipoAccion;
	}

	@Column(name = "cond_carga", length = 1)
	public Character getCondCarga() {
		return this.condCarga;
	}

	public void setCondCarga(Character condCarga) {
		this.condCarga = condCarga;
	}

	@Column(name = "sitio_atraque", length = 15)
	public String getSitioAtraque() {
		return this.sitioAtraque;
	}

	public void setSitioAtraque(String sitioAtraque) {
		this.sitioAtraque = sitioAtraque;
	}

	@Column(name = "almacen", nullable = false, length = 30)
	public String getAlmacen() {
		return this.almacen;
	}

	public void setAlmacen(String almacen) {
		this.almacen = almacen;
	}

	@Column(name = "usuario_cr", length = 50)
	public String getUsuarioCr() {
		return this.usuarioCr;
	}

	public void setUsuarioCr(String usuarioCr) {
		this.usuarioCr = usuarioCr;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_cr", length = 23)
	public Date getFechaCr() {
		return this.fechaCr;
	}

	public void setFechaCr(Date fechaCr) {
		this.fechaCr = fechaCr;
	}

	@Column(name = "usuario_up", length = 50)
	public String getUsuarioUp() {
		return this.usuarioUp;
	}

	public void setUsuarioUp(String usuarioUp) {
		this.usuarioUp = usuarioUp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_up", length = 23)
	public Date getFechaUp() {
		return this.fechaUp;
	}

	public void setFechaUp(Date fechaUp) {
		this.fechaUp = fechaUp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_ult_lec", length = 23)
	public Date getFechaUltLec() {
		return fechaUltLec;
	}

	public void setFechaUltLec(Date fechaUltLec) {
		this.fechaUltLec = fechaUltLec;
	}



	@Column(name = "tipo_carga", length = 4)
	public String getTipoCarga() {
		return tipoCarga;
	}

	public void setTipoCarga(String tipoCarga) {
		this.tipoCarga = tipoCarga;
	}

	@Column(name = "motivo_anulacion", length = 200)
	public String getMotivoAnulacion() {
		return motivoAnulacion;
	}

	public void setMotivoAnulacion(String motivoAnulacion) {
		this.motivoAnulacion = motivoAnulacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_traspaso", length = 23)
	public Date getFechaTraspaso() {
		return fechaTraspaso;
	}

	public void setFechaTraspaso(Date fechaTraspaso) {
		this.fechaTraspaso = fechaTraspaso;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "zarpe", length = 23)
	public Date getZarpe() {
		return zarpe;
	}

	public void setZarpe(Date zarpe) {
		this.zarpe = zarpe;
	}


	@Transient
	public String getNaveManifiesto() {
		return this.nroMfto + " / " + this.nave;
	}




	@Column(name = "nro_mfto_interno_empresa")
	public String getNroMftoInternoEmpresa() {
		return nroMftoInternoEmpresa;
	}

	public void setNroMftoInternoEmpresa(String nroMftoInternoEmpresa) {
		this.nroMftoInternoEmpresa = nroMftoInternoEmpresa;
	}




	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "arribo_efectivo", length = 23)
	public Date getArriboEfectivo() {
		return arriboEfectivo;
	}

	public void setArriboEfectivo(Date arriboEfectivo) {
		this.arriboEfectivo = arriboEfectivo;
	}



	@Formula(value = "CASE WHEN EXISTS(SELECT * FROM faltas_y_sobras AS fs WHERE fs.manifiesto=nro_mfto_interno) THEN convert(BIT,1) ELSE convert(BIT,0) END")
	public boolean isFaltas() {
		return faltas;
	}

	public void setFaltas(boolean faltas) {
		this.faltas = faltas;
	}

	@Formula(value = "CASE WHEN EXISTS(SELECT * FROM faltas_y_sobras_sin_papeleta AS fsi WHERE fsi.manifiesto=nro_mfto_interno) THEN convert(BIT,1) ELSE convert(BIT,0) END")
	public boolean isFaltaSin() {
		return faltaSin;
	}

	public void setFaltaSin(boolean faltaSin) {
		this.faltaSin = faltaSin;
	}

}
